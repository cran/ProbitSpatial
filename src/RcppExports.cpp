// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// ApproxiW
SEXP ApproxiW(SEXP WW, SEXP la, SEXP ordd);
RcppExport SEXP _ProbitSpatial_ApproxiW(SEXP WWSEXP, SEXP laSEXP, SEXP orddSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type WW(WWSEXP);
    Rcpp::traits::input_parameter< SEXP >::type la(laSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ordd(orddSEXP);
    rcpp_result_gen = Rcpp::wrap(ApproxiW(WW, la, ordd));
    return rcpp_result_gen;
END_RCPP
}
// grad_SAR_UC_FG
SEXP grad_SAR_UC_FG(SEXP th, SEXP env);
RcppExport SEXP _ProbitSpatial_grad_SAR_UC_FG(SEXP thSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type th(thSEXP);
    Rcpp::traits::input_parameter< SEXP >::type env(envSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_SAR_UC_FG(th, env));
    return rcpp_result_gen;
END_RCPP
}
// grad_SAR_UC_AG
SEXP grad_SAR_UC_AG(SEXP th, SEXP env);
RcppExport SEXP _ProbitSpatial_grad_SAR_UC_AG(SEXP thSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type th(thSEXP);
    Rcpp::traits::input_parameter< SEXP >::type env(envSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_SAR_UC_AG(th, env));
    return rcpp_result_gen;
END_RCPP
}
// grad_SAR_UP_AG
SEXP grad_SAR_UP_AG(SEXP th, SEXP env);
RcppExport SEXP _ProbitSpatial_grad_SAR_UP_AG(SEXP thSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type th(thSEXP);
    Rcpp::traits::input_parameter< SEXP >::type env(envSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_SAR_UP_AG(th, env));
    return rcpp_result_gen;
END_RCPP
}
// grad_SAR_UP_FG
SEXP grad_SAR_UP_FG(SEXP th, SEXP env);
RcppExport SEXP _ProbitSpatial_grad_SAR_UP_FG(SEXP thSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type th(thSEXP);
    Rcpp::traits::input_parameter< SEXP >::type env(envSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_SAR_UP_FG(th, env));
    return rcpp_result_gen;
END_RCPP
}
// grad_SEM_UC_AG
SEXP grad_SEM_UC_AG(SEXP th, SEXP env);
RcppExport SEXP _ProbitSpatial_grad_SEM_UC_AG(SEXP thSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type th(thSEXP);
    Rcpp::traits::input_parameter< SEXP >::type env(envSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_SEM_UC_AG(th, env));
    return rcpp_result_gen;
END_RCPP
}
// grad_SEM_UC_FG
SEXP grad_SEM_UC_FG(SEXP th, SEXP env);
RcppExport SEXP _ProbitSpatial_grad_SEM_UC_FG(SEXP thSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type th(thSEXP);
    Rcpp::traits::input_parameter< SEXP >::type env(envSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_SEM_UC_FG(th, env));
    return rcpp_result_gen;
END_RCPP
}
// grad_SEM_UP_AG
SEXP grad_SEM_UP_AG(SEXP th, SEXP env);
RcppExport SEXP _ProbitSpatial_grad_SEM_UP_AG(SEXP thSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type th(thSEXP);
    Rcpp::traits::input_parameter< SEXP >::type env(envSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_SEM_UP_AG(th, env));
    return rcpp_result_gen;
END_RCPP
}
// grad_SEM_UP_FG
SEXP grad_SEM_UP_FG(SEXP th, SEXP env);
RcppExport SEXP _ProbitSpatial_grad_SEM_UP_FG(SEXP thSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type th(thSEXP);
    Rcpp::traits::input_parameter< SEXP >::type env(envSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_SEM_UP_FG(th, env));
    return rcpp_result_gen;
END_RCPP
}
// lik_SAR_UC_conditional
SEXP lik_SAR_UC_conditional(SEXP th, SEXP env);
RcppExport SEXP _ProbitSpatial_lik_SAR_UC_conditional(SEXP thSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type th(thSEXP);
    Rcpp::traits::input_parameter< SEXP >::type env(envSEXP);
    rcpp_result_gen = Rcpp::wrap(lik_SAR_UC_conditional(th, env));
    return rcpp_result_gen;
END_RCPP
}
// lik_SAR_UC
SEXP lik_SAR_UC(SEXP th, SEXP env);
RcppExport SEXP _ProbitSpatial_lik_SAR_UC(SEXP thSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type th(thSEXP);
    Rcpp::traits::input_parameter< SEXP >::type env(envSEXP);
    rcpp_result_gen = Rcpp::wrap(lik_SAR_UC(th, env));
    return rcpp_result_gen;
END_RCPP
}
// lik_SAR_UP_conditional
SEXP lik_SAR_UP_conditional(SEXP th, SEXP env);
RcppExport SEXP _ProbitSpatial_lik_SAR_UP_conditional(SEXP thSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type th(thSEXP);
    Rcpp::traits::input_parameter< SEXP >::type env(envSEXP);
    rcpp_result_gen = Rcpp::wrap(lik_SAR_UP_conditional(th, env));
    return rcpp_result_gen;
END_RCPP
}
// lik_SAR_UP
SEXP lik_SAR_UP(SEXP th, SEXP env);
RcppExport SEXP _ProbitSpatial_lik_SAR_UP(SEXP thSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type th(thSEXP);
    Rcpp::traits::input_parameter< SEXP >::type env(envSEXP);
    rcpp_result_gen = Rcpp::wrap(lik_SAR_UP(th, env));
    return rcpp_result_gen;
END_RCPP
}
// lik_SARAR_UC_conditional
SEXP lik_SARAR_UC_conditional(SEXP th, SEXP env);
RcppExport SEXP _ProbitSpatial_lik_SARAR_UC_conditional(SEXP thSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type th(thSEXP);
    Rcpp::traits::input_parameter< SEXP >::type env(envSEXP);
    rcpp_result_gen = Rcpp::wrap(lik_SARAR_UC_conditional(th, env));
    return rcpp_result_gen;
END_RCPP
}
// lik_SARAR_UC
SEXP lik_SARAR_UC(SEXP th, SEXP env);
RcppExport SEXP _ProbitSpatial_lik_SARAR_UC(SEXP thSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type th(thSEXP);
    Rcpp::traits::input_parameter< SEXP >::type env(envSEXP);
    rcpp_result_gen = Rcpp::wrap(lik_SARAR_UC(th, env));
    return rcpp_result_gen;
END_RCPP
}
// lik_SARAR_UP_conditional
SEXP lik_SARAR_UP_conditional(SEXP th, SEXP env);
RcppExport SEXP _ProbitSpatial_lik_SARAR_UP_conditional(SEXP thSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type th(thSEXP);
    Rcpp::traits::input_parameter< SEXP >::type env(envSEXP);
    rcpp_result_gen = Rcpp::wrap(lik_SARAR_UP_conditional(th, env));
    return rcpp_result_gen;
END_RCPP
}
// lik_SARAR_UP
SEXP lik_SARAR_UP(SEXP th, SEXP env);
RcppExport SEXP _ProbitSpatial_lik_SARAR_UP(SEXP thSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type th(thSEXP);
    Rcpp::traits::input_parameter< SEXP >::type env(envSEXP);
    rcpp_result_gen = Rcpp::wrap(lik_SARAR_UP(th, env));
    return rcpp_result_gen;
END_RCPP
}
// lik_SEM_UC_conditional
SEXP lik_SEM_UC_conditional(SEXP th, SEXP env);
RcppExport SEXP _ProbitSpatial_lik_SEM_UC_conditional(SEXP thSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type th(thSEXP);
    Rcpp::traits::input_parameter< SEXP >::type env(envSEXP);
    rcpp_result_gen = Rcpp::wrap(lik_SEM_UC_conditional(th, env));
    return rcpp_result_gen;
END_RCPP
}
// lik_SEM_UC
SEXP lik_SEM_UC(SEXP th, SEXP env);
RcppExport SEXP _ProbitSpatial_lik_SEM_UC(SEXP thSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type th(thSEXP);
    Rcpp::traits::input_parameter< SEXP >::type env(envSEXP);
    rcpp_result_gen = Rcpp::wrap(lik_SEM_UC(th, env));
    return rcpp_result_gen;
END_RCPP
}
// lik_SEM_UP_conditional
SEXP lik_SEM_UP_conditional(SEXP th, SEXP env);
RcppExport SEXP _ProbitSpatial_lik_SEM_UP_conditional(SEXP thSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type th(thSEXP);
    Rcpp::traits::input_parameter< SEXP >::type env(envSEXP);
    rcpp_result_gen = Rcpp::wrap(lik_SEM_UP_conditional(th, env));
    return rcpp_result_gen;
END_RCPP
}
// lik_SEM_UP
SEXP lik_SEM_UP(SEXP th, SEXP env);
RcppExport SEXP _ProbitSpatial_lik_SEM_UP(SEXP thSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type th(thSEXP);
    Rcpp::traits::input_parameter< SEXP >::type env(envSEXP);
    rcpp_result_gen = Rcpp::wrap(lik_SEM_UP(th, env));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ProbitSpatial_ApproxiW", (DL_FUNC) &_ProbitSpatial_ApproxiW, 3},
    {"_ProbitSpatial_grad_SAR_UC_FG", (DL_FUNC) &_ProbitSpatial_grad_SAR_UC_FG, 2},
    {"_ProbitSpatial_grad_SAR_UC_AG", (DL_FUNC) &_ProbitSpatial_grad_SAR_UC_AG, 2},
    {"_ProbitSpatial_grad_SAR_UP_AG", (DL_FUNC) &_ProbitSpatial_grad_SAR_UP_AG, 2},
    {"_ProbitSpatial_grad_SAR_UP_FG", (DL_FUNC) &_ProbitSpatial_grad_SAR_UP_FG, 2},
    {"_ProbitSpatial_grad_SEM_UC_AG", (DL_FUNC) &_ProbitSpatial_grad_SEM_UC_AG, 2},
    {"_ProbitSpatial_grad_SEM_UC_FG", (DL_FUNC) &_ProbitSpatial_grad_SEM_UC_FG, 2},
    {"_ProbitSpatial_grad_SEM_UP_AG", (DL_FUNC) &_ProbitSpatial_grad_SEM_UP_AG, 2},
    {"_ProbitSpatial_grad_SEM_UP_FG", (DL_FUNC) &_ProbitSpatial_grad_SEM_UP_FG, 2},
    {"_ProbitSpatial_lik_SAR_UC_conditional", (DL_FUNC) &_ProbitSpatial_lik_SAR_UC_conditional, 2},
    {"_ProbitSpatial_lik_SAR_UC", (DL_FUNC) &_ProbitSpatial_lik_SAR_UC, 2},
    {"_ProbitSpatial_lik_SAR_UP_conditional", (DL_FUNC) &_ProbitSpatial_lik_SAR_UP_conditional, 2},
    {"_ProbitSpatial_lik_SAR_UP", (DL_FUNC) &_ProbitSpatial_lik_SAR_UP, 2},
    {"_ProbitSpatial_lik_SARAR_UC_conditional", (DL_FUNC) &_ProbitSpatial_lik_SARAR_UC_conditional, 2},
    {"_ProbitSpatial_lik_SARAR_UC", (DL_FUNC) &_ProbitSpatial_lik_SARAR_UC, 2},
    {"_ProbitSpatial_lik_SARAR_UP_conditional", (DL_FUNC) &_ProbitSpatial_lik_SARAR_UP_conditional, 2},
    {"_ProbitSpatial_lik_SARAR_UP", (DL_FUNC) &_ProbitSpatial_lik_SARAR_UP, 2},
    {"_ProbitSpatial_lik_SEM_UC_conditional", (DL_FUNC) &_ProbitSpatial_lik_SEM_UC_conditional, 2},
    {"_ProbitSpatial_lik_SEM_UC", (DL_FUNC) &_ProbitSpatial_lik_SEM_UC, 2},
    {"_ProbitSpatial_lik_SEM_UP_conditional", (DL_FUNC) &_ProbitSpatial_lik_SEM_UP_conditional, 2},
    {"_ProbitSpatial_lik_SEM_UP", (DL_FUNC) &_ProbitSpatial_lik_SEM_UP, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_ProbitSpatial(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
